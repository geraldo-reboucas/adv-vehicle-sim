function path_added=SetAdvisorPath(varargin)

%------------------Add ADVISOR directories to the MATLAB path-------------
% Add the appropriate paths based on where advisor.m is found with the which command (This
% defines the main ADVISOR directory)
%
% NOTE: paths will only be added with the addpath command if they don't already exist.
% If new directories were added to the path (using addpath), a 1 will be returned 
% otherwise a 0 will be returned.
% 
% SetAdvisorPath can accept a comma separated list of arguments.  The arguments should be
% the name of an existing directory.  Non-existing directories will not be created. The 
% comma separated list of arguments will be stored in varargin as a cell array of strings
% Each directory will be added to the path individually.
%

% directories that must be present in MATLAB path for ADVISOR to run properly
dir2add={'\extras\batmodel\documentation'	;...
        '\extras\batmodel'		;...
        '\extras\engmodel'		;...
        '\extras\engmodel\documentation'	;...
        '\extras\Image2Map'		;...
        '\extras\Scale_Bore_Stroke'  ;...
        '\data'					;...
        '\data\accessory'			;...
        '\data\accessory\etc'   ;...
        '\data\control'			;...
        '\data\drive_cycle'		;...
        '\data\energy_storage'	;...
        '\data\exhaust'			;...
        '\data\fuel_converter'	;...
        '\data\fuel_converter\neural_net';...
        '\data\fuel_converter\KTH';...
        '\data\generator'			;...
        '\data\motor'				;...
        '\data\test_procedure'	;...
        '\data\transmission'		;...
        '\data\vehicle'			;...
        '\data\wheel'				;...
        '\documentation'					;...
        '\gui_graphics'             ;...
        '\gui'								;...
        '\gui\optionlists'                     ;...
        '\gui\DynamicGraphics'      ;...
        '\gui\Results'                     ;...
        '\gui\SimSetup'                    ;...
        '\gui\SaberCosim'                  ;...
        '\gui\SaberCosim\Battery'                  ;...
        '\models'							;...
        '\models\library'					;...
        '\models\Saber'					;...
        '\models\Saber\Battery'					;...
        '\models\Simplorer'              ;...
        '\models\Sindafluint'           ;...
        '\optimization'					;...
        '\optimization\examples\3humpcamelback'					;...
        '\optimization\examples\3humpcamelback\direct'					;...
        '\optimization\examples\3humpcamelback\isight'					;...
        '\optimization\examples\3humpcamelback\matlab'					;...
        '\optimization\examples\3humpcamelback\visualdoc'					;...
        '\optimization\examples\box'					;...
        '\optimization\examples\box\direct'					;...
        '\optimization\examples\box\isight'					;...
        '\optimization\examples\box\matlab'					;...
        '\optimization\examples\box\visualdoc'					;...
        '\optimization\examples\control'					;...
        '\optimization\examples\control\direct'					;...
        '\optimization\examples\control\isight'					;...
        '\optimization\examples\control\matlab'					;...
        '\optimization\examples\sizing'					;...
        '\optimization\examples\sizing\direct'					;...
        '\optimization\examples\sizing\isight'					;...
        '\optimization\examples\sizing\matlab'					;...
        '\optimization\examples\sizing\visualdoc'					;...
        '\optimization\examples\sizing_plus_control'					;...
        '\optimization\examples\sizing_plus_control\direct'					;...
        '\optimization\examples\sizing_plus_control\isight'					;...
        '\optimization\examples\sizing_plus_control\matlab'					;...
        '\tmp'					;...
        '\saved_vehicles'					};

% use lower command for all except unix platforms (which is case sensitive)
if isunix
    adv_dir=strrep(which('advisor'),'\advisor.m','');
    p=path;
else
    dir2add=lower(dir2add);
    adv_dir=lower(strrep(which('advisor'),'\advisor.m',''));
    p=lower(path);
end

% checking and adding paths as necessary.
path_added=0;
for i=1:length(dir2add)
    temp=findstr([adv_dir dir2add{i}],p);
    if isempty(temp)
        addpath([adv_dir dir2add{i}],'-frozen')
        path_added=1;
    end
end

temp=findstr(adv_dir,p);

if isempty(temp)
    addpath(adv_dir,'-frozen') % add the main directory if it isn't already in there
    path_added=1;
end

% add any user-specified directories
if exist('varargin', 'var')
    for i=1:length(varargin)
        try
            if isunix
                addpath(varargin{i},'-frozen')
            else
                addpath(lower(varargin{i}),'-frozen')
            end
        catch
            disp(['Directory ', varargin{i}, ' does not exist.'])    
        end
    end
end

return

% Revision History
% 12/07/01:tm added -frozen arguement to the end of the add path 
%             statements to prevent windows change notification handle errors
% 06-MAR-2002[mpo] added \data\accessory\etc to the path
% 10-APR-2002[mpo] added \data\accessory\neural_net to the path
% 16-APR-2002[mpo] added \models\Sindafluint to the path
% 4/29/03:tm removed ..\kth_old since it no longer exists
% 8/4/03: ss removed VSOLE, no longer available through ADVISOR